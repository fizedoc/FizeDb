===================
PostgreSQL大对象
===================


+-------------+--------------------------------------------------+
|属性         |值                                                |
+=============+==================================================+
|命名空间     |fize\\db\\realization\\pgsql\\mode\\driver\\pgsql |
+-------------+--------------------------------------------------+
|类名         |Lo                                                |
+-------------+--------------------------------------------------+


:方法:


+-----------------+----------------------------------------------------+
|方法名           |说明                                                |
+=================+====================================================+
|`__construct()`_ |构造                                                |
+-----------------+----------------------------------------------------+
|`loClose()`_     |关闭一个大型对象                                    |
+-----------------+----------------------------------------------------+
|`loReadAll()`_   |读入整个大型对象并直接发送给浏览器                  |
+-----------------+----------------------------------------------------+
|`loRead()`_      |从大型对象中读入数据                                |
+-----------------+----------------------------------------------------+
|`loSeek()`_      |移动大型对象中的指针                                |
+-----------------+----------------------------------------------------+
|`loTell()`_      |返回大型对象的当前指针位置                          |
+-----------------+----------------------------------------------------+
|`loTruncate()`_  |截断大对象                                          |
+-----------------+----------------------------------------------------+
|`loWrite()`_     |向大型对象写入数据                                  |
+-----------------+----------------------------------------------------+


方法
======
__construct()
-------------
构造

.. code-block:: php

  public function __construct (
      resource &$large_object
  )


:参数:
  +-------------+----------+
  |名称         |说明      |
  +=============+==========+
  |large_object |大对象    |
  +-------------+----------+
  
  


loClose()
---------
关闭一个大型对象

.. code-block:: php

  public function loClose () : bool



loReadAll()
-----------
读入整个大型对象并直接发送给浏览器

.. code-block:: php

  public function loReadAll () : int


:返回值:
  读入的字节数


loRead()
--------
从大型对象中读入数据

.. code-block:: php

  public function loRead (
      int $len
  ) : string


:参数:
  +-------+---------------------------------+
  |名称   |说明                             |
  +=======+=================================+
  |len    |读入最多 len 字节的数据          |
  +-------+---------------------------------+
  
  


loSeek()
--------
移动大型对象中的指针

.. code-block:: php

  public function loSeek (
      int $offset,
      int $whence = 1
  ) : bool


:参数:
  +-------+-------------------------------------------------------------+
  |名称   |说明                                                         |
  +=======+=============================================================+
  |offset |偏移量                                                       |
  +-------+-------------------------------------------------------------+
  |whence |参数为 PGSQL_SEEK_SET，PGSQL_SEEK_CUR 或 PGSQL_SEEK_END      |
  +-------+-------------------------------------------------------------+
  
  


loTell()
--------
返回大型对象的当前指针位置

.. code-block:: php

  public function loTell () : int



loTruncate()
------------
截断大对象

.. code-block:: php

  public function loTruncate (
      int $size
  ) : bool


:参数:
  +-------+----------------------+
  |名称   |说明                  |
  +=======+======================+
  |size   |要截断的字节数        |
  +-------+----------------------+
  
  


loWrite()
---------
向大型对象写入数据

.. code-block:: php

  public function loWrite (
      string $data
  ) : int


:参数:
  +-------+-------------------+
  |名称   |说明               |
  +=======+===================+
  |data   |要写入的数据       |
  +-------+-------------------+
  
  


